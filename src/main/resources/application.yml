spring:
  application:
    name: patientpoint-service
  profiles:
    active: local
  data:
    mongodb:
      database: patientpoint-service
      replicaSet: ${MONGODB_REPLICA_SET}
      uri: mongodb+srv://${MONGODB_USER}:${MONGODB_PASS}@${MONGODB_HOST}
      readPreference: primary
      readConcern: majority
      writeConcern: MAJORITY
      writeWithJournal: true
      retryWrites: true
      additional-params:
        maxSize: 100
        minSize: 10
        maxWaitTimeMS: 5
        maxConnectionLifeTimeMS: 60000
        maxConnectionIdleTimeMS: 30000
        maintenanceInitialDelayMS: 1000
        maintenanceFrequencyMS: 60000
        heartbeatFrequency: 15000
        connectTimeout: 30000
        readTimeout: 30000
  kafka:
    enabled: true
    enabled: true
    client-id-prefix: ${spring.application.name}
    bootstrap-servers: ${KAFKA_BROKER_URL:http://localhost:9092}
    security:
      enabled: true
    poc-topics:
      content-publish: ${VAR_ENV_SHORT}.pub.content.content-publish
      content-publish-v2: ${VAR_ENV_SHORT}.pub.content.content-publish-v2
      ecc-content-publish-status: ${VAR_ENV_SHORT}.pub.content.ecc-content-publish-status
    poc-consumer-group:
      content-publish-retract: ${VAR_ENV_SHORT}.${spring.application.name}.content-publish-retract
      content-publish-v2: ${VAR_ENV_SHORT}.pub.content.content-publish
      register-media: ${VAR_ENV_SHORT}.${spring.application.name}.register-media
logging:
  structured:
    format:
      console: logstash
    json:
      add:
        application: ${spring.application.name}
        environment: ${SPRING_PROFILES_ACTIVE}
        service: ${spring.application.name}
      rename:
        level: logLevel
        thread_name: thread
        logger_name: logger
        level_value: levelValue
  level:
    root: info
    com.ppt: info
